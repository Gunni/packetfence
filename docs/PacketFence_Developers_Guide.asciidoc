= Developer's Guide
:encoding: UTF-8
:lang: en
:doctype: book
:toc: left
:experimental:
// to display images directly on GitHub
ifdef::env-github[]
:imagesdir: ./images
endif::[]

////

    This file is part of the PacketFence project.

    See PacketFence_Developers_Guide-docinfo.xml for
    authors, copyright and license information.

////

ifndef::env-github[]
include::includes/global-attributes.asciidoc[]
endif::[]

== About this Guide

This guide will help you modifying PacketFence to your particular needs. It also contains information on how to add support for new switches.

The latest version of this guide is available at https://packetfence.org/documentation/.

=== Other sources of information

<<PacketFence_Clustering_Guide.asciidoc#,Clustering Guide>>::
  Covers installation in a clustered environment.
<<PacketFence_Installation_Guide.asciidoc#,Installation Guide>>::
  Covers installation and configuration of PacketFence.
<<PacketFence_Network_Devices_Configuration_Guide.asciidoc#,Network Devices Configuration Guide>>::
  Covers switches, WiFi controllers and access points configuration.
<<PacketFence_Upgrade_Guide.asciidoc#,Upgrade Guide>>::
  Covers compatibility related changes, manual instructions and general notes
  about upgrading.
link:https://packetfence.org/news.html[PacketFence News]
  Covers noteworthy features, improvements and bug fixes by release.

These files are included in the package and release tarballs.

//== Creating a new Switch via a Template

ifdef::env-github[]
<<developer/template_switches#creating-a-new-switch-via-a-template, Creating a new Switch via a Template>>
endif::[]
ifndef::env-github[]
include::developer/template_switches.asciidoc[]
endif::[]

//== Documentation

ifdef::env-github[]
<<developer/documentation_info#documentation, Documentation>>
endif::[]
ifndef::env-github[]
include::developer/documentation_info.asciidoc[]
endif::[]

//== Golang environment

ifdef::env-github[]
<<developer/go/README#golang-environment, Golang environment>>
endif::[]
ifndef::env-github[]
include::developer/go/README.asciidoc[]
endif::[]

//== Code conventions

ifdef::env-github[]
<<developer/code_conventions#code-conventions, Code conventions>>
endif::[]
ifndef::env-github[]
include::developer/code_conventions.asciidoc[]
endif::[]

//== HTTP JSON API

ifdef::env-github[]
<<developer/http_json_api#http-json-api, HTTP JSON API>>
endif::[]
ifndef::env-github[]
include::developer/http_json_api.asciidoc[]
endif::[]

//== Customizing PacketFence

ifdef::env-github[]
<<developer/customizing_packetfence#customizing-packetfence, Customizing PacketFence>>
endif::[]
ifndef::env-github[]
include::developer/customizing_packetfence.asciidoc[]
endif::[]

//== SNMP

ifdef::env-github[]
<<developer/snmp#snmp, SNMP>>
endif::[]
ifndef::env-github[]
include::developer/snmp.asciidoc[]
endif::[]

//== Supporting new network hardware

ifdef::env-github[]
<<developer/supporting_new_network_hardware#supporting-new-network-hardware, Supporting new network hardware>>
endif::[]
ifndef::env-github[]
include::developer/supporting_new_network_hardware.asciidoc[]
endif::[]

//== PacketFence builds

ifdef::env-github[]
<<developer/packer/README#packetfence-builds, PacketFence builds>>
endif::[]
ifndef::env-github[]
include::developer/packer/README.asciidoc[]
endif::[]

//== Developer recipes

ifdef::env-github[]
<<developer/developer_recipes#developer-recipes, Developer recipes>>
endif::[]
ifndef::env-github[]
include::developer/developer_recipes.asciidoc[]
endif::[]

//== Running tests

ifdef::env-github[]
<<developer/tests/README, Running tests>>
endif::[]
ifndef::env-github[]
include::developer/tests/README.asciidoc[]
endif::[]

ifdef::env-github[]
<<developer/integration_tests/README, Integration tests>>
endif::[]
ifndef::env-github[]
include::developer/integration_tests/README.asciidoc[]
endif::[]

//== Contributing

ifdef::env-github[]
<<developer/contributing#contributing, Contributing>>
endif::[]
ifndef::env-github[]
include::developer/contributing.asciidoc[]
endif::[]

//TODO: process the rest. I found quickest way to be:
// paste from docbook then use vim(:1,9s#<\_.\{-1,}>##g) and reformat by hand

// INCLUDES

ifdef::env-github[]
<<includes/additional-info#additional-information, Additional Information>>
endif::[]
ifndef::env-github[]
include::includes/additional-info.asciidoc[]
endif::[]

ifdef::env-github[]
<<includes/commercial-support, Additional Info>>
endif::[]
ifndef::env-github[]
include::includes/commercial-support.asciidoc[]
endif::[]

ifdef::env-github[]
<<includes/license#gnu-free-documentation-license, License>>
endif::[]
ifndef::env-github[]
include::includes/license.asciidoc[]
endif::[]

// vim: set syntax=asciidoc tabstop=2 shiftwidth=2 expandtab:
