#!/bin/bash

function test_db_connection_no_creds() {
  mysql -e 'select 1' > /dev/null
}

function get_db_name() {
  pf_conf="$1"
  db_name=`perl -MConfig::IniFiles -I/usr/local/pf/lib_perl/lib/perl5/ -e "print Config::IniFiles->new( -file => '$pf_conf')->val("database", "db")"`
  if [ -z "$db_name" ]; then
    db_name=pf
  fi
  
  echo $db_name
}

function import_mysqldump() {
  grants_file="$1"
  dump_file="$2"
  pf_conf="$3"

  if ! [ -f "$pf_conf" ]; then
    echo "The path to pf.conf is invalid"
    exit 1
  fi

  mariadb_args=""
  # we need a grant dump generated via: mysql ${MYSQL_CONN} --skip-column-names -A -e"SELECT CONCAT('SHOW GRANTS FOR ''',user,'''@''',host,''';') FROM mysql.user WHERE user<>''" | mysql ${MYSQL_CONN} --skip-column-names -A | sed 's/$/;/g' > grants.sql
  if ! test_db_connection_no_creds; then
    echo -n "Please enter the root password for MariaDB:"
    read -s mariadb_root_pass
    mariadb_args="$mariadb_args -p$mariadb_root_pass"
  fi

  db_name=`get_db_name $pf_conf`

  sub_splitter
  echo "Importing grants"
  mysql ${mariadb_args} < $grants_file
	check_code $?

  sub_splitter
  echo "Importing $dump_file into $db_name"
  mysql ${mariadb_args} $db_name < $dump_file
	check_code $?
}

function upgrade_path() {
  current_version="$1"
  current_version=`echo $current_version | sed 's/\./\\./g'`
  db_scripts=`ls /usr/local/pf/db/upgrade-* | egrep '^/usr/local/pf/db/upgrade-[0-9]+\.[0-9]+\.[0-9]+-[0-9]+\.[0-9]+\.[0-9]+\.sql' | sort --version-sort | sed -ne '/'$current_version'/{:a' -e 'n;p;ba' -e '}'`
  if [ -f /usr/local/pf/db/upgrade-X.X-X.Y.sql ]; then
    db_scripts="$db_scripts /usr/local/pf/db/upgrade-X.X-X.Y.sql"
  fi
  echo $db_scripts
}

function upgrade_database() {
  if ! test_db_connection_no_creds; then
    echo -n "Please enter the root password for MariaDB:"
    read -s mariadb_root_pass
    mariadb_args="$mariadb_args -p$mariadb_root_pass"
  fi

  db_name="$1"
  db_version=`mysql -e "select version from $db_name.pf_version;" | egrep -o '^[0-9]+\.[0-9]+'`  
  echo "Database $db_name runs version $db_version"
  scripts=`upgrade_path $db_version`
  echo "Found upgrade path: $scripts"
  for script in $scripts; do
    sub_splitter
    echo "Running $script"
    mysql -v $mariadb_args $db_name < $script
    check_code $?
  done
  
}
